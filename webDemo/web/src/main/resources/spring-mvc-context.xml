<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <mvc:annotation-driven/>
    <mvc:resources mapping="/resources/**" location="/resources/"/>
    <!-- 支持异步方法执行 -->
    <task:annotation-driven/>

    <import resource="classpath:/spring-beans-context.xml"/>

    <mvc:resources mapping="/resources/**" location="/resources/"/>
    <!-- 启动扫描所有的Component -->
    <context:component-scan base-package="com.mystudy.web"/>

    <!-- freemarker 相关 -->
    <bean id="freemarkerConfig" class="com.mystudy.web.common.mvc.view.ViewConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/views/"/>
        <property name="defaultEncoding" value="utf-8"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">10</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="datetime_format">yyyy-MM-dd</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="number_format">#.##</prop>
            </props>
        </property>
    </bean>
    <!-- 页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件-->
    <bean class="com.mystudy.web.common.mvc.view.ViewPageResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <!--<property name="prefix" value="/WEB-INF/views/"></property>-->
        <property name="suffix" value=".ftl"/>
        <property name="contentType" value="text/html;charset=UTF-8" />
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
    </bean>

    <!--<mvc:interceptors>-->
        <!--<bean class="com.mystudy.web.common.interceptor.WebContextInterceptor"/>-->
    <!--</mvc:interceptors>-->

    <!-- 配置数据源 start -->
    <!-- 公共的数据源配置 -->
    <util:properties id="dbConfig" location="classpath:/jdbc.properties"></util:properties>
    <!-- 写入数据源 start -->
    <bean id="writeDataSource" class="org.apache.commons.dbcp.BasicDataSource"
          lazy-init="default" autowire="default" destroy-method="close">
        <property name="driverClassName" value="#{dbConfig['write.driver']}"></property>
        <property name="url" value="#{dbConfig['write.url']}"></property>
        <property name="username" value="#{dbConfig['write.user']}"></property>
        <property name="password" value="#{dbConfig['write.password']}"></property>
        <property name="maxWait" value="#{dbConfig['write.maxWait']}"></property>
        <property name="testWhileIdle" value="#{dbConfig['write.testWhileIdle']}"></property>
        <property name="removeAbandoned" value="#{dbConfig['write.removeAbandoned']}"></property>
        <property name="removeAbandonedTimeout" value="#{dbConfig['write.removeAbandonedTimeout']}"></property>
        <property name="timeBetweenEvictionRunsMillis"
                  value="#{dbConfig['write.timeBetweenEvictionRunsMillis']}"></property>
        <property name="maxActive" value="#{dbConfig['write.maxActive']}"></property>
        <property name="maxIdle" value="#{dbConfig['write.maxIdle']}"></property>
    </bean>

    <!-- 读数据源 start -->
    <bean id="readDataSource" class="org.apache.commons.dbcp.BasicDataSource"
          lazy-init="default" autowire="default" destroy-method="close">
        <property name="driverClassName" value="#{dbConfig['read.driver']}"></property>
        <property name="url" value="#{dbConfig['read.url']}"></property>
        <property name="username" value="#{dbConfig['read.user']}"></property>
        <property name="password" value="#{dbConfig['read.password']}"></property>
        <property name="maxWait" value="#{dbConfig['read.maxWait']}"></property>
        <property name="testWhileIdle" value="#{dbConfig['read.testWhileIdle']}"></property>
        <property name="removeAbandoned" value="#{dbConfig['read.removeAbandoned']}"></property>
        <property name="removeAbandonedTimeout" value="#{dbConfig['read.removeAbandonedTimeout']}"></property>
        <property name="timeBetweenEvictionRunsMillis"
                  value="#{dbConfig['read.timeBetweenEvictionRunsMillis']}"></property>
        <property name="maxActive" value="#{dbConfig['read.maxActive']}"></property>
        <property name="maxIdle" value="#{dbConfig['read.maxIdle']}"></property>

    </bean>
    <!--end 读数据源 -->
    <bean id="dataSource" class="com.mystudy.web.common.datasource.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="writeDataSource" value-ref="writeDataSource"/>
                <entry key="readDataSource" value-ref="readDataSource"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="writeDataSource"/>
        <property name="defaultDataSourceKey" value="writeDataSource"/>
    </bean>
    <!-- aop start -->
    <bean id="serviceAop" class="com.mystudy.web.common.aop.ServiceAop"/>
    <bean id="annotationMultipleDataSourceAdvice"
          class="com.mystudy.web.common.datasource.impl.AnnotationMultipleDataSourceAdvice"/>

    <!--<aop:config>-->
        <!--<aop:pointcut id="servicePoint" expression="execution(* com.mystudy.web.service.*.*(..))"/>-->
        <!--<aop:advisor advice-ref="annotationMultipleDataSourceAdvice" pointcut-ref="servicePoint"/>-->
        <!--<aop:aspect id="aroundMethod" ref="serviceAop">-->
            <!--<aop:around pointcut-ref="servicePoint" method="around"/>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mystudy.web.mapper"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>